name: gerar cobertura de teste
on: [push]

env:
  CAMINHO_PROJETO_TESTES: ./SistemaVendas.UnitTests

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Code Coverage
      run: dotnet test ${{ env.CAMINHO_PROJETO_TESTES }} --verbosity detailed --collect:"XPlat Code Coverage" --settings **/runsettings.xml
    
    - name: Install ReportGenerator
      if: success()
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Gerar relatório de cobertura de testes com ReportGenerator
      if: success()
      run: reportgenerator "-reports:**/TestResults/**/coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Html

    - name: Upload como Artifact dos Reports de Resultado de Testes Executados com Sucesso + Cobertura de Código
      uses: actions/upload-artifact@v2.2.2
      env:
        CAMINHO_RESULTADO_TESTES: ./coveragereport
      if: success()
      with:
        name: resultado-testes
        path: ${{ env.CAMINHO_RESULTADO_TESTES }}
        retention-days: 30
    
    - name: Upload como Artifact do Report de Testes com Falhas
      uses: actions/upload-artifact@v2.2.2
      if: failure()
      env:
        CAMINHO_RELATORIO_ERROS: ${{ env.CAMINHO_PROJETO_TESTES }}/TestResults/resultado-testes.html
      with:
        name: resultado-erros-testes
        path: ${{ env.CAMINHO_RELATORIO_ERROS }}
        retention-days: 30

    # - name: Test
    #   run: dotnet test --no-build --verbosity normal